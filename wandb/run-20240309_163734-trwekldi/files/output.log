  0%|                                                                                                                                                       | 0/7074 [00:00<?, ?it/s]/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
Could not estimate the number of tokens of the input, floating-point operations will not be computed






  0%|▏                                                                                                                                            | 7/7074 [00:28<7:18:12,  3.72s/it]Traceback (most recent call last):
  File "/home/dylanz/group_project/eecs-545-project/fine-tune-phi-qlora-dro.py", line 97, in <module>
    dpo_trainer.train()
  File "/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/transformers/trainer.py", line 1537, in train
    return inner_training_loop(
  File "/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/transformers/trainer.py", line 1854, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/transformers/trainer.py", line 2744, in training_step
    self.accelerator.backward(loss)
  File "/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/accelerate/accelerator.py", line 1966, in backward
    loss.backward(**kwargs)
  File "/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/torch/_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "/home/dylanz/anaconda3/envs/pt-2.0.1/lib/python3.10/site-packages/torch/autograd/__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt